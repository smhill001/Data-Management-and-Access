Project 9:

Project 8 looks quite good, but there are two items that probably need to be address by me:
1) I need to write some rigorous tests and do some comparisons against reference data
2) The data arrays are flipped from the convention I was using based on a commercial product, I need to understand which convention to follow
3) While the normalization and calibration is generally good, it needs some refinement, especially for the NH3. 
Some of the NH3 values are greater than 1.0, which is not physical. So this could mean an adjustment with the
normalization approach or creation of the NH3 continuum file. I'll need to work on these probably for a 
couple of weeks given that the Holidays are here.

That said, I think that the methane transmission files look good both qualitatively and quantitatively (still might 
be room for fine tuning, but not worried about it for now). So I think it's time to move on to the next step for 
methane, which is converting the transmission to cloud pressure. This is the atmospheric pressure at which most 
of the light is reflected by  clouds for each latitude and longitude.

This is a straightforward calculation to make presented below as code. I've included that steps for computing
the ammonia mole fraction if you finish the cloud pressure calculations. The file naming convention should be 
the standard one for L3 products. I would add the numerical values for absorption cross sections (k_eff for both molecules) as key words in the FITS header to show what was used, because the values are dependent on the spectral 
shape of the optical filters used in different telescopes.

I would also suggest one go-back change to the L2 file headers, which is to add the calibration values as a keyword.

Here's the new code:

#set constants and set gravity as a function of latitude (Jupiter is so oblate that gravity
#  varies significantly from the equator to the poles. 

amagat = 2.69e24 #Lodschmits number. (cm-2) This is really km-amagat - an arcane atmospheric science unit
mean_mol_wt = 3.85e-24 #gm/molecule, which is 2.22 gm/mole
fCH4 = 2.04e-3 #mole fraction of ammonia (old value from Galileo was 1.81e-3)
STP = 1.01e6  #dyne/cm^2 [(g-cm/s^2)/cm^2]`- standard pressure for one atmosphere
gravity = g.gravity() #see file dropped in processes

<<Note: If you see ways to make gravity more pythonic, please do so>>

#compute ammonia optical depth according to Beer-Lambert law
CH4_tau = -np.log(CH4data)
NH3_tau = -np.log(NH3data) 

#compute column abundance of molecules along the line-of-sight where 1000 corrects for units
#  and K_eff are the effective absorption cross sections of each molecule, 0.427 and 2.955 for 
#  methane and ammonia respectively
CH4_Ncol = 1000*CH4_tau/K_eff_CH4620 
NH3_Ncol = 1000*NH3_tau/K_eff_NH3647

#compute cloud pressure - CH4_Cloud_Press is computed in units of mb
CH4_Cloud_Press = CH4_Ncol*amagat*gravity*mean_mol_wt/(fCH4*STP)
    
#compute ammonia mole fraction - ratio of column densities multiplied by methane mole fraction
fNH3=fCH4*NH3_Ncol/CH4_Ncol

